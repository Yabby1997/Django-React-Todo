{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/react/todo/src/App.js\";\nimport React, { Component } from \"react\";\nimport Modal from \"./components/Modal\";\nimport axios from \"axios\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.toggle = () => {\n      this.setState({\n        modal: !this.state.modal\n      });\n    };\n\n    this.handleSubmit = item => {\n      this.toggle();\n\n      if (item.id) {\n        axios.put('http://localhost:8000/api/todos/' + item.id + '/', item).then(res => this.refreshList());\n        alert(\"Edited!\");\n        return;\n      }\n\n      axios.post('http://localhost:8000/api/todos/', item).then(res => this.refreshList());\n      alert(\"Created!\");\n    };\n\n    this.handleDelete = item => {\n      axios.delete('http://localhost:8000/api/todos/', item.id + '/').then(res => this.refreshList());\n      alert(\"Deleted!\");\n    };\n\n    this.createItem = () => {\n      const item = {\n        title: \"\",\n        description: \"\",\n        completed: false\n      };\n      this.setState({\n        activeItem: item,\n        modal: !this.state.modal\n      });\n    };\n\n    this.editItem = item => {\n      this.setState({\n        activeItem: item,\n        modal: !this.state.modal\n      });\n    };\n\n    this.displayCompleted = status => {\n      if (status) {\n        return this.setState({\n          viewCompleted: true\n        });\n      }\n\n      return this.setState({\n        viewCompleted: false\n      });\n    };\n\n    this.renderTabList = () => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"my-5 tab-list\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: () => this.displayCompleted(true),\n          className: this.state.viewCompleted ? \"active\" : \"\",\n          children: \"complete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: () => this.displayCompleted(false),\n          className: this.state.viewCompleted ? \"\" : \"active\",\n          children: \"Incomplete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 7\n      }, this);\n    };\n\n    this.renderItems = () => {\n      const {\n        viewCompleted\n      } = this.state; //보여줄 item인 newItems는 item을 todoList의 아이템의 completed여부와 viewCompleted가 동일한것만 보여준다.\n\n      const newItems = this.state.todoList.filter(item => item.completed === viewCompleted); //보여줄 item들을 모두 list로 만들어 반환 \n\n      return newItems.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n        //key는 필수\n        className: \"list-group-item d-flex justify-content-between align-items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: () => this.editItem(item),\n          className: `todo-title mr-2 ${this.state.viewCompleted ? \"completed-todo\" : \"\"}`,\n          title: item.description,\n          children: item.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => this.editItem(item),\n            className: \"btn btn-secondary mr-2\",\n            children: \" Edit \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => this.handleDelete(item),\n            className: \"btn btn-danger\",\n            children: \"Delete \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 9\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 7\n      }, this));\n    };\n\n    this.state = {\n      modal: false,\n      //modal 여부\n      viewCompleted: false,\n      activeItem: {\n        //선택된 item 정보\n        title: \"\",\n        description: \"\",\n        completed: false\n      },\n      todoList: []\n    };\n  }\n\n  componentDidMount() {\n    this.refreshList();\n  }\n\n  refreshList() {\n    axios.get(\"http://localhost:8000/api/todos/\").then(res => this.setState({\n      todoList: res.data\n    })).catch(err => console.log(err));\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-white text-uppercase text-center my-4\",\n        children: \"Todo app\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row \",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-6 col-sm-10 mx-auto p-0\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card p-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: this.createItem,\n                className: \"btn btn-primary\",\n                children: \"Add task\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 15\n            }, this), this.renderTabList(), /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"list-group list-group-flush\",\n              children: this.renderItems()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), this.state.modal ? /*#__PURE__*/_jsxDEV(Modal, {\n        activeItem: this.state.activeItem,\n        toggle: this.toggle,\n        onSave: this.handleSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 11\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/react/todo/src/App.js"],"names":["React","Component","Modal","axios","App","constructor","props","toggle","setState","modal","state","handleSubmit","item","id","put","then","res","refreshList","alert","post","handleDelete","delete","createItem","title","description","completed","activeItem","editItem","displayCompleted","status","viewCompleted","renderTabList","renderItems","newItems","todoList","filter","map","componentDidMount","get","data","catch","err","console","log","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Modal from \"./components/Modal\";\nimport axios from \"axios\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modal: false,             //modal 여부\n      viewCompleted: false,\n      activeItem: {             //선택된 item 정보\n        title: \"\",\n        description: \"\",\n        completed: false\n      },\n      todoList: []\n    };\n  }\n\n  componentDidMount(){\n    this.refreshList();\n  }\n\n  refreshList(){\n    axios.get(\"http://localhost:8000/api/todos/\")\n    .then(res => this.setState({ todoList: res.data}))\n    .catch(err => console.log(err));\n  }\n\n  toggle = () => {\n    this.setState({ modal: !this.state.modal });\n  };\n\n  handleSubmit = item => {\n    this.toggle();\n    if(item.id){\n      axios.put('http://localhost:8000/api/todos/' + item.id + '/', item)\n      .then(res => this.refreshList());\n      alert(\"Edited!\");\n      return;\n    }\n    axios.post('http://localhost:8000/api/todos/', item)\n    .then(res => this.refreshList());\n    alert(\"Created!\");\n  };\n\n  handleDelete = item => {\n    axios.delete('http://localhost:8000/api/todos/', item.id + '/')\n    .then(res => this.refreshList());\n    alert(\"Deleted!\");\n  };\n\n  createItem = () => {\n    const item = { title: \"\", description: \"\", completed: false };\n    this.setState({\n      activeItem: item,\n      modal: !this.state.modal\n    })\n  };\n\n  editItem = item => {\n    this.setState({\n      activeItem: item,\n      modal: !this.state.modal\n    })\n  };\n\n  //인자로받는 status에 따라 this.state의 viewCompleted를 변화시키는 함수\n  displayCompleted = status => {\n    if (status) {\n      return this.setState({ viewCompleted: true });\n    }\n    return this.setState({ viewCompleted: false });\n  };\n\n  //complete 리스트를 볼지 incomplete 리스트를 볼지를 선택하는 부분\n  renderTabList = () => {\n    return (\n      <div className=\"my-5 tab-list\">\n        <span\n          onClick={() => this.displayCompleted(true)}\n          className={this.state.viewCompleted ? \"active\" : \"\"}\n        >\n          complete\n            </span>\n        <span\n          onClick={() => this.displayCompleted(false)}\n          className={this.state.viewCompleted ? \"\" : \"active\"}\n        >\n          Incomplete\n            </span>\n      </div>\n    );\n  };\n\n  renderItems = () => {\n    const { viewCompleted } = this.state;\n    //보여줄 item인 newItems는 item을 todoList의 아이템의 completed여부와 viewCompleted가 동일한것만 보여준다.\n    const newItems = this.state.todoList.filter(\n      item => item.completed === viewCompleted\n    );\n    //보여줄 item들을 모두 list로 만들어 반환 \n    return newItems.map(item => (\n      <li\n        key={item.id} //key는 필수\n        className=\"list-group-item d-flex justify-content-between align-items-center\"\n      >\n        <span\n          onClick={() => this.editItem(item)}\n          className={`todo-title mr-2 ${this.state.viewCompleted ? \"completed-todo\" : \"\"}`}\n          title={item.description}\n        >{item.title}</span>\n        <span>\n          <button\n            onClick={() => this.editItem(item)}\n            className=\"btn btn-secondary mr-2\"\n          > Edit </button>\n          <button\n            onClick={() => this.handleDelete(item)}\n            className=\"btn btn-danger\"\n          >Delete </button>\n        </span>\n      </li>\n    ));\n  };\n\n  render() {\n    return (\n      <main className=\"content\">\n        <h1 className=\"text-white text-uppercase text-center my-4\">Todo app</h1>\n        <div className=\"row \">\n          <div className=\"col-md-6 col-sm-10 mx-auto p-0\">\n            <div className=\"card p-3\">\n              <div className=\"\">\n                <button\n                  onClick={this.createItem}\n                  className=\"btn btn-primary\"\n                >Add task</button>\n              </div>\n              {this.renderTabList()}\n              <ul className=\"list-group list-group-flush\">\n                {this.renderItems()}\n              </ul>\n            </div>\n          </div>\n        </div>\n        {this.state.modal ? (\n          <Modal\n            activeItem={this.state.activeItem}\n            toggle={this.toggle}\n            onSave={this.handleSubmit}\n          ></Modal>\n        ) : null}\n      </main>\n    );\n  }\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}