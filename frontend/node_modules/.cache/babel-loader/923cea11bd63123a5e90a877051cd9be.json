{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/react/todo/src/App.js\";\nimport React, { Component } from \"react\";\nimport Modal from \"./components/Modal\";\nimport axios from \"axios\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.refreshList = () => {\n      var data = axios.get(\"/api/todos\");\n      console.log(data);\n    };\n\n    this.toggle = () => {\n      this.setState({\n        modal: !this.state.modal\n      });\n    };\n\n    this.handleSubmit = item => {\n      this.toggle();\n      alert(\"save\" + JSON.stringify(item));\n    };\n\n    this.handleDelete = item => {\n      alert(\"delete\" + JSON.stringify(item));\n    };\n\n    this.createItem = () => {\n      const item = {\n        title: \"\",\n        description: \"\",\n        completed: false\n      };\n      this.setState({\n        activeItem: item,\n        modal: !this.state.modal\n      });\n    };\n\n    this.editItem = item => {\n      this.setState({\n        activeItem: item,\n        modal: !this.state.modal\n      });\n    };\n\n    this.displayCompleted = status => {\n      if (status) {\n        return this.setState({\n          viewCompleted: true\n        });\n      }\n\n      return this.setState({\n        viewCompleted: false\n      });\n    };\n\n    this.renderTabList = () => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"my-5 tab-list\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: () => this.displayCompleted(true),\n          className: this.state.viewCompleted ? \"active\" : \"\",\n          children: \"complete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: () => this.displayCompleted(false),\n          className: this.state.viewCompleted ? \"\" : \"active\",\n          children: \"Incomplete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }, this);\n    };\n\n    this.renderItems = () => {\n      const {\n        viewCompleted\n      } = this.state; //보여줄 item인 newItems는 item을 todoList의 아이템의 completed여부와 viewCompleted가 동일한것만 보여준다.\n\n      const newItems = this.state.todoList.filter(item => item.completed === viewCompleted); //보여줄 item들을 모두 list로 만들어 반환 \n\n      return newItems.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n        //key는 필수\n        className: \"list-group-item d-flex justify-content-between align-items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: () => this.editItem(item),\n          className: `todo-title mr-2 ${this.state.viewCompleted ? \"completed-todo\" : \"\"}`,\n          title: item.description,\n          children: item.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => this.editItem(item),\n            className: \"btn btn-secondary mr-2\",\n            children: \" Edit \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => this.handleDelete(item),\n            className: \"btn btn-danger\",\n            children: \"Delete \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 9\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 7\n      }, this));\n    };\n\n    this.state = {\n      modal: false,\n      //modal 여부\n      viewCompleted: false,\n      activeItem: {\n        //선택된 item 정보\n        title: \"\",\n        description: \"\",\n        completed: false\n      },\n      todoList: []\n    };\n  }\n\n  componentDidMount() {\n    this.refreshList();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-white text-uppercase text-center my-4\",\n        children: \"Todo app\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row \",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-6 col-sm-10 mx-auto p-0\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card p-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: this.createItem,\n                className: \"btn btn-primary\",\n                children: \"Add task\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 15\n            }, this), this.renderTabList(), /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"list-group list-group-flush\",\n              children: this.renderItems()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), this.state.modal ? /*#__PURE__*/_jsxDEV(Modal, {\n        activeItem: this.state.activeItem,\n        toggle: this.toggle,\n        onSave: this.handleSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 11\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/react/todo/src/App.js"],"names":["React","Component","Modal","axios","App","constructor","props","refreshList","data","get","console","log","toggle","setState","modal","state","handleSubmit","item","alert","JSON","stringify","handleDelete","createItem","title","description","completed","activeItem","editItem","displayCompleted","status","viewCompleted","renderTabList","renderItems","newItems","todoList","filter","map","id","componentDidMount","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Modal from \"./components/Modal\";\nimport axios from \"axios\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modal: false,             //modal 여부\n      viewCompleted: false,\n      activeItem: {             //선택된 item 정보\n        title: \"\",\n        description: \"\",\n        completed: false\n      },\n      todoList: []\n    };\n  }\n\n  componentDidMount(){\n    this.refreshList();\n  }\n\n  refreshList = () => {\n    var data = axios.get(\"/api/todos\")\n    console.log(data);\n  };\n\n  toggle = () => {\n    this.setState({ modal: !this.state.modal });\n  };\n\n  handleSubmit = item => {\n    this.toggle();\n    alert(\"save\" + JSON.stringify(item));\n  };\n\n  handleDelete = item => {\n    alert(\"delete\" + JSON.stringify(item));\n  };\n\n  createItem = () => {\n    const item = { title: \"\", description: \"\", completed: false };\n    this.setState({\n      activeItem: item,\n      modal: !this.state.modal\n    })\n  };\n\n  editItem = item => {\n    this.setState({\n      activeItem: item,\n      modal: !this.state.modal\n    })\n  };\n\n  //인자로받는 status에 따라 this.state의 viewCompleted를 변화시키는 함수\n  displayCompleted = status => {\n    if (status) {\n      return this.setState({ viewCompleted: true });\n    }\n    return this.setState({ viewCompleted: false });\n  };\n\n  //complete 리스트를 볼지 incomplete 리스트를 볼지를 선택하는 부분\n  renderTabList = () => {\n    return (\n      <div className=\"my-5 tab-list\">\n        <span\n          onClick={() => this.displayCompleted(true)}\n          className={this.state.viewCompleted ? \"active\" : \"\"}\n        >\n          complete\n            </span>\n        <span\n          onClick={() => this.displayCompleted(false)}\n          className={this.state.viewCompleted ? \"\" : \"active\"}\n        >\n          Incomplete\n            </span>\n      </div>\n    );\n  };\n\n  renderItems = () => {\n    const { viewCompleted } = this.state;\n    //보여줄 item인 newItems는 item을 todoList의 아이템의 completed여부와 viewCompleted가 동일한것만 보여준다.\n    const newItems = this.state.todoList.filter(\n      item => item.completed === viewCompleted\n    );\n    //보여줄 item들을 모두 list로 만들어 반환 \n    return newItems.map(item => (\n      <li\n        key={item.id} //key는 필수\n        className=\"list-group-item d-flex justify-content-between align-items-center\"\n      >\n        <span\n          onClick={() => this.editItem(item)}\n          className={`todo-title mr-2 ${this.state.viewCompleted ? \"completed-todo\" : \"\"}`}\n          title={item.description}\n        >{item.title}</span>\n        <span>\n          <button\n            onClick={() => this.editItem(item)}\n            className=\"btn btn-secondary mr-2\"\n          > Edit </button>\n          <button\n            onClick={() => this.handleDelete(item)}\n            className=\"btn btn-danger\"\n          >Delete </button>\n        </span>\n      </li>\n    ));\n  };\n\n  render() {\n    return (\n      <main className=\"content\">\n        <h1 className=\"text-white text-uppercase text-center my-4\">Todo app</h1>\n        <div className=\"row \">\n          <div className=\"col-md-6 col-sm-10 mx-auto p-0\">\n            <div className=\"card p-3\">\n              <div className=\"\">\n                <button\n                  onClick={this.createItem}\n                  className=\"btn btn-primary\"\n                >Add task</button>\n              </div>\n              {this.renderTabList()}\n              <ul className=\"list-group list-group-flush\">\n                {this.renderItems()}\n              </ul>\n            </div>\n          </div>\n        </div>\n        {this.state.modal ? (\n          <Modal\n            activeItem={this.state.activeItem}\n            toggle={this.toggle}\n            onSave={this.handleSubmit}\n          ></Modal>\n        ) : null}\n      </main>\n    );\n  }\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}